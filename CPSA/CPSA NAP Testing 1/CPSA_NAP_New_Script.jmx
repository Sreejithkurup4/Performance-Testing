<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="CPSA_NAP_New_Script" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CPSA_NAP_New_Script" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">true</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
          <collectionProp name="DNSCacheManager.servers"/>
          <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
          <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
        </DNSCacheManager>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login Flow" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Base_url" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AuthenticationProperties Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">AuthenticationProperties</stringProp>
              <stringProp name="RegexExtractor.regex">(AuthenticationProperties%3d)(\S+)(&amp;)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="nonce Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">nonce</stringProp>
              <stringProp name="RegexExtractor.regex">(nonce=)(\S+)(&amp;)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Sitefinity/Authenticate/OpenID/connect/authorize-437" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">sitefinity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https%3a%2f%2fnapqa.cpsa.com%2f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">form_post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">id_token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid+profile+rememberMe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">OpenIdConnect.AuthenticationProperties%3d${AuthenticationProperties}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">${nonce}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="acr_values" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">acr_values</stringProp>
                  <stringProp name="Argument.value">%7b%22isExt%22%3a%22True%22%2c%22err%22%3a%22%2f%22%2c%22extPvdr%22%3a%22AzureB2C%22%7d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Sitefinity/Authenticate/OpenID/connect/authorize</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="signin Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">signin</stringProp>
              <stringProp name="RegexExtractor.regex">(SignInMessage\.)(\S+)(=)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Sitefinity/Authenticate/OpenID/login-438" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="signin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">signin</stringProp>
                  <stringProp name="Argument.value">${signin}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Sitefinity/Authenticate/OpenID/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AuthenticationProperties2 Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">AuthenticationProperties2</stringProp>
              <stringProp name="RegexExtractor.regex">(AuthenticationProperties%3d)(\S+)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cpsab2cqa.onmicrosoft.com/oauth2/v2.0/authorize-458" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">b2c_1a_nap_dev_signup_signin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">b1fd5a01-6183-4eb3-9050-efc7a1507f8f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://napqa.cpsa.com/sitefinity/authenticate/openid/signin-custom</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">form_post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">id_token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile email</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">OpenIdConnect.AuthenticationProperties%3d${AuthenticationProperties2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">cpsab2cqa.b2clogin.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/cpsab2cqa.onmicrosoft.com/oauth2/v2.0/authorize</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="csrf" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">csrf</stringProp>
              <stringProp name="RegexExtractor.regex">(csrf&quot;:&quot;)(\S+==)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="pageviewid" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">pageviewid</stringProp>
              <stringProp name="RegexExtractor.regex">(pageViewId&quot;:&quot;)(\S+)(&quot;,&quot;supp)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="stateprop" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">stateproperties</stringProp>
              <stringProp name="RegexExtractor.regex">(StateProperties=)(.+?)(&quot;,&quot;pageViewId)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/en-US/b2ctest/-461" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">cpsaqa.microsoftcrmportals.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/en-US/b2ctest/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cpsab2cqa.b2clogin.com/cpsab2cqa.onmicrosoft.com/B2C_1A_nap_dev_signup_signin/SelfAsserted?tx=StateProperties=eyJUSUQiOiIxOGU2Y2QxNS0xM2FhLTQxYmEtODRmMi1iN2Q4NGUzODlhOWQifQ&amp;p=B2C_1A_nap_dev_signup_signin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">B2C_1A_nap_dev_signup_signin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tx</stringProp>
                  <stringProp name="Argument.value">StateProperties=${stateproperties}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">qburst@1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="request_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">request_type</stringProp>
                  <stringProp name="Argument.value">RESPONSE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="signInName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">signInName</stringProp>
                  <stringProp name="Argument.value">anew2@yopmail.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">cpsab2cqa.b2clogin.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cpsab2cqa.onmicrosoft.com/B2C_1A_nap_dev_signup_signin/SelfAsserted</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-TOKEN" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-TOKEN</stringProp>
                  <stringProp name="Header.value">${csrf}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">cpsab2cqa.b2clogin.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com/cpsab2cqa.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1a_nap_dev_signup_signin&amp;client_id=b1fd5a01-6183-4eb3-9050-efc7a1507f8f&amp;redirect_uri=https%3a%2f%2fnapqa.cpsa.com%2fsitefinity%2fauthenticate%2fopenid%2fsignin-custom&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid+profile+email&amp;state=OpenIdConnect.AuthenticationProperties%3d{AuthenticationProperties2}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://cpsab2cqa.b2clogin.com/cpsab2cqa.onmicrosoft.com/B2C_1A_nap_dev_signup_signin/api/CombinedSigninAndSignup/confirmed?csrf_token=Edited" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="p" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">p</stringProp>
                  <stringProp name="Argument.value">B2C_1A_nap_dev_signup_signin</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tx</stringProp>
                  <stringProp name="Argument.value">StateProperties=${stateproperties}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="csrf_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">csrf_token</stringProp>
                  <stringProp name="Argument.value">${csrf}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="diags" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">diags</stringProp>
                  <stringProp name="Argument.value">{&quot;pageViewId&quot;:&quot;${pageviewid}&quot;,&quot;pageId&quot;:&quot;CombinedSigninAndSignup&quot;,&quot;trace&quot;:[{&quot;ac&quot;:&quot;T005&quot;,&quot;acST&quot;:1620542072,&quot;acD&quot;:1},{&quot;ac&quot;:&quot;T021 - URL:https://cpsaqa.microsoftcrmportals.com/en-US/b2ctest/&quot;,&quot;acST&quot;:1620542072,&quot;acD&quot;:495},{&quot;ac&quot;:&quot;T029&quot;,&quot;acST&quot;:1620542072,&quot;acD&quot;:33},{&quot;ac&quot;:&quot;T004&quot;,&quot;acST&quot;:1620542072,&quot;acD&quot;:2},{&quot;ac&quot;:&quot;T019&quot;,&quot;acST&quot;:1620542072,&quot;acD&quot;:44},{&quot;ac&quot;:&quot;T003&quot;,&quot;acST&quot;:1620542072,&quot;acD&quot;:50},{&quot;ac&quot;:&quot;T002&quot;,&quot;acST&quot;:0,&quot;acD&quot;:0}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">cpsab2cqa.b2clogin.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">cpsab2cqa.onmicrosoft.com/B2C_1A_nap_dev_signup_signin/api/CombinedSigninAndSignup/confirmed</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">cpsab2cqa.b2clogin.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com/cpsab2cqa.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1a_nap_dev_signup_signin&amp;client_id=b1fd5a01-6183-4eb3-9050-efc7a1507f8f&amp;redirect_uri=https%3a%2f%2fnapqa.cpsa.com%2fsitefinity%2fauthenticate%2fopenid%2fsignin-custom&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid+profile+email&amp;state=OpenIdConnect.AuthenticationProperties%3d{AuthenticationProperties2}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_Token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id_Token</stringProp>
              <stringProp name="RegexExtractor.regex">(value=&apos;)(\S+)(&apos;\/&gt;&lt;\/div)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">id_Token_Not_Found</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="OpenIdConnect.AuthenticationProperties_confirmed_sate" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AuthenticationProperties_confirmed_sate</stringProp>
              <stringProp name="RegexExtractor.regex">(AuthenticationProperties=)(\S+)(&apos;\/&gt;)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default">OpenIdConnect.AuthenticationProperties_not_Found</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/sitefinity/authenticate/openid/signin-custom" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                </elementProp>
                <elementProp name="id_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${id_Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id_token</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sitefinity/authenticate/openid/signin-custom</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com/</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1517</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Sitefinity/Authenticate/OpenID/callback" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Sitefinity/Authenticate/OpenID/callback</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AuthenticationProperties3 Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">AuthenticationProperties3</stringProp>
              <stringProp name="RegexExtractor.regex">(AuthenticationProperties%3D)(\S+)(&amp;no)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="nonce2 Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">nonce2</stringProp>
              <stringProp name="RegexExtractor.regex">(nonce=)(\S+)(&amp;non)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3DpCHQP6a7ASfEsSlXruJEaZcn1I8CCbOsQfd1pzy6BcsDKsjCjgof-oEKxedfPRCHcy4CcPRUpS-KyhpBHWti3pazwCuFeCkeJwFVxQiY4FCkFX_nXTxzMQaOAHo1RAkWBQJkHHfadyRU_kjKdSyioNS3iQVNd4TAxr0cnindc6HTnVt7zDLPL0UYFEtAJWuNgFO9LV8nPleNzVLHyq1pPYbkYh4n80acP3XKOHH2XLmFvKGSHvQ8i0vf06ASfZSFYYtLiKO9r5pbd-HKNkIdD7BdpFqzEYWDueVMdInw745WFWgKGemLwxQymT3zDyDa&amp;nonce=637561388693483579.OGMwOGNkNDQtNmRjYy00Y2VhLWEwZDktZmEzMmRjY2VjNDM2NzJjMzAwODctMTRkNS00ZTA1LTg1YmEtZDJkMzgzMDM1MzYw&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid profile rememberMe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="acr_values" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">acr_values</stringProp>
                  <stringProp name="Argument.value">{&quot;isExt&quot;:&quot;True&quot;,&quot;err&quot;:&quot;/&quot;,&quot;extPvdr&quot;:&quot;AzureB2C&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">id_token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://napqa.cpsa.com/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">${nonce}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">sitefinity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">form_post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Sitefinity/Authenticate/OpenID/connect/authorize</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://cpsab2cqa.b2clogin.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id_Token2 Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id_Token2</stringProp>
              <stringProp name="RegexExtractor.regex">(&quot;id_token&quot; value=&quot;)(\S+)(&quot;)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AuthenticationProperties4 Extractor_auth_sitefinity" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">AuthenticationProperties_auth_sitefinity</stringProp>
              <stringProp name="RegexExtractor.regex">(AuthenticationProperties=)(\S+)(&quot;)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="session_state Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">session_state</stringProp>
              <stringProp name="RegexExtractor.regex">(session_state&quot; value=)(\S+)(&quot;)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Sitefinity/Authenticate/OpenID/assets/app.FormPostResponse.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Sitefinity/Authenticate/OpenID/assets/app.FormPostResponse.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties3}&amp;nonce=${nonce2}&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="appid Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">appid</stringProp>
              <stringProp name="RegexExtractor.regex">(appId=)(\S+)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="napqa.cpsa.com/_Trial" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${id_Token2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id_token</stringProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">openid profile rememberMe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties_auth_sitefinity}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                </elementProp>
                <elementProp name="session_state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${session_state}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">session_state</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties}&amp;nonce=${nonce}&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1720</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="napqa.cpsa.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${id_Token2}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id_token</stringProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">openid profile rememberMe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                </elementProp>
                <elementProp name="session_state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${session_state}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">session_state</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties}&amp;nonce=${nonce}&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">1720</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="referer&#x9;https" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties}&amp;nonce=${nonce}&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/learner-home-479" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/learner-home</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties}&amp;nonce=${nonce}&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor_id_Token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">param_id_token</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;id_token&quot; value=&quot;(.+?)&quot; ng-non-bindable</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Id_Token_Not_Found</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor_State" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">param_State</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;state&quot; value=&quot;(.+?)&quot; ng-non-bindable</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">State_Not_Found</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor_session_state" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">param_session_state</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;input type=&quot;hidden&quot; name=&quot;session_state&quot; value=&quot;(.+?)&quot; ng-non-bindable</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">session_state_Not_Found</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="nonce2 Extractor" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">param_nonce</stringProp>
              <stringProp name="RegexExtractor.regex">(nonce=)(\S+)(&amp;non)</stringProp>
              <stringProp name="RegexExtractor.template">$2$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor_Nonce_1" enabled="false">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">param_Nonce_1</stringProp>
              <stringProp name="RegexExtractor.regex">&amp;nonce=(.+?)&amp;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Nonce_Not_Found</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3D${AuthenticationProperties}&amp;nonce=${nonce}&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-GB,en-US;q=0.9,en;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Styles/css?v=ywz-xmkxJWfJi1Vg9faf8URGc9BQiA7FK_im2OVTw_U1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">ywz-xmkxJWfJi1Vg9faf8URGc9BQiA7FK_im2OVTw_U1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Styles/css</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Styles/css?v=ywz-xmkxJWfJi1Vg9faf8URGc9BQiA7FK_im2OVTw_U1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">114.4</stringProp>
              <stringProp name="ConstantTimer.delay">228.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/jquery.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/jquery.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/jquery.js</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">272.0</stringProp>
              <stringProp name="ConstantTimer.delay">544.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/js?v=xSIhts9bDleQQNBZTiBML9S0jMjyyz09czpvslSgQBo1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">xSIhts9bDleQQNBZTiBML9S0jMjyyz09czpvslSgQBo1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/js?v=xSIhts9bDleQQNBZTiBML9S0jMjyyz09czpvslSgQBo1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">107.60000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">215.20000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/browserSpec?v=7v7Z_hjc1g_YpHYdtD-90ippRb5l_7puqeEDDoy-h981" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">7v7Z_hjc1g_YpHYdtD-90ippRb5l_7puqeEDDoy-h981</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/browserSpec</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/browserSpec?v=7v7Z_hjc1g_YpHYdtD-90ippRb5l_7puqeEDDoy-h981</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/progressbar?v=0BbgeTdOu6RfW5ZCA_HYj_5XYlyq6_xTVHqDO2NGtbU1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">0BbgeTdOu6RfW5ZCA_HYj_5XYlyq6_xTVHqDO2NGtbU1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/progressbar</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/progressbar?v=0BbgeTdOu6RfW5ZCA_HYj_5XYlyq6_xTVHqDO2NGtbU1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">127.60000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">255.20000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Styles/SelfAssessment?v=3kHnwgJBtgKbXM9wDPJSww4wKsAVQg7KrixGBbT0lS41" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">3kHnwgJBtgKbXM9wDPJSww4wKsAVQg7KrixGBbT0lS41</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Styles/SelfAssessment</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Styles/SelfAssessment?v=3kHnwgJBtgKbXM9wDPJSww4wKsAVQg7KrixGBbT0lS41</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Styles/Recomendedcourse?v=AsdLIOh0u_Hd9oJW7NodviNa3tkCR-VrNEK6bESwndA1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">AsdLIOh0u_Hd9oJW7NodviNa3tkCR-VrNEK6bESwndA1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Styles/Recomendedcourse</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Styles/Recomendedcourse?v=AsdLIOh0u_Hd9oJW7NodviNa3tkCR-VrNEK6bESwndA1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">3.6</stringProp>
              <stringProp name="ConstantTimer.delay">7.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/Recomendedcourse?v=9Ip6L0K2PaYpLDG2EvBFtjhJX8H7yOj6r5K9F08X08M1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">9Ip6L0K2PaYpLDG2EvBFtjhJX8H7yOj6r5K9F08X08M1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/Recomendedcourse</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/Recomendedcourse?v=9Ip6L0K2PaYpLDG2EvBFtjhJX8H7yOj6r5K9F08X08M1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Styles/progressbar?v=TAnY_UcPrfJPEPUnS9twWlhoVaA2_oGPI-EL8KnHqvs1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">TAnY_UcPrfJPEPUnS9twWlhoVaA2_oGPI-EL8KnHqvs1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Styles/progressbar</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Styles/progressbar?v=TAnY_UcPrfJPEPUnS9twWlhoVaA2_oGPI-EL8KnHqvs1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">2.4000000000000004</stringProp>
              <stringProp name="ConstantTimer.delay">4.800000000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Styles/PduConfigPopup?v=J4KK7b8O_hpIAzEcErL7SpqI4iQtqN9H2H91O2nVqsY1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">J4KK7b8O_hpIAzEcErL7SpqI4iQtqN9H2H91O2nVqsY1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Styles/PduConfigPopup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Styles/PduConfigPopup?v=J4KK7b8O_hpIAzEcErL7SpqI4iQtqN9H2H91O2nVqsY1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">6.4</stringProp>
              <stringProp name="ConstantTimer.delay">12.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/PduConfigPopup?v=-a22IaxqWUEyzt3tpix_ZigoC9n4EYBvlkjmeZRz4Rw1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">-a22IaxqWUEyzt3tpix_ZigoC9n4EYBvlkjmeZRz4Rw1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/PduConfigPopup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/PduConfigPopup?v=-a22IaxqWUEyzt3tpix_ZigoC9n4EYBvlkjmeZRz4Rw1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">217.60000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">435.20000000000005</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/recent-activity.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/recent-activity.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/recent-activity.js</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Styles/PDUActivityStyles?v=pQwfGVdZx3_flbwi9P1iSub8VE4RP_9QdobwfwQZH5Y1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">pQwfGVdZx3_flbwi9P1iSub8VE4RP_9QdobwfwQZH5Y1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Styles/PDUActivityStyles</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Styles/PDUActivityStyles?v=pQwfGVdZx3_flbwi9P1iSub8VE4RP_9QdobwfwQZH5Y1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">6.800000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">13.600000000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/PDUActivityScripts?v=98qCJ2LXNuzfOtp3JpOth4tI4LzKUCfnCKCdAu138oA1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">98qCJ2LXNuzfOtp3JpOth4tI4LzKUCfnCKCdAu138oA1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/PDUActivityScripts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/PDUActivityScripts?v=98qCJ2LXNuzfOtp3JpOth4tI4LzKUCfnCKCdAu138oA1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">115.60000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">231.20000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Styles/jquery.mCustomScrollbar.min?v=Id8QVHyQSuYcU5VYsIOLc2sAr7z4L0pUgtSfU5yY2So1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">Id8QVHyQSuYcU5VYsIOLc2sAr7z4L0pUgtSfU5yY2So1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Styles/jquery.mCustomScrollbar.min</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Styles/jquery.mCustomScrollbar.min?v=Id8QVHyQSuYcU5VYsIOLc2sAr7z4L0pUgtSfU5yY2So1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">style</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">112.0</stringProp>
              <stringProp name="ConstantTimer.delay">224.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/jquery.mCustomScrollbar.concat.min?v=OLPfyG3Witnpf-JXin_nSahI8AV2lYU4QAq_2iDmkuU1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">OLPfyG3Witnpf-JXin_nSahI8AV2lYU4QAq_2iDmkuU1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/jquery.mCustomScrollbar.concat.min</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/jquery.mCustomScrollbar.concat.min?v=OLPfyG3Witnpf-JXin_nSahI8AV2lYU4QAq_2iDmkuU1</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">1.6</stringProp>
              <stringProp name="ConstantTimer.delay">3.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/datepicker-fr.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/datepicker-fr.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/datepicker-fr.js</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://static.hotjar.com/c/hotjar-1196415.js?sv=6" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">static.hotjar.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">c/hotjar-1196415.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">static.hotjar.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/c/hotjar-1196415.js?sv=6</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">149.20000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">298.40000000000003</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/WebResource.axd?d=yAZznlIeaGQJz8qTi4uqDXnWBU-09gdKfuUJ4_MyrPsnaIWVKdEZYRUGUG8fWYHF3Kt__zI5SAWBU2NlO0hXD8Ll6z7xRCjnMMZ_Gh0gveN5MwymUt6_zr59L7CiN-V7H5RabV9J9bY3OoEAJXaShRhudP0qGu-6ff3-ppSE-qg1&amp;t=637535692820000000" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">yAZznlIeaGQJz8qTi4uqDXnWBU-09gdKfuUJ4_MyrPsnaIWVKdEZYRUGUG8fWYHF3Kt__zI5SAWBU2NlO0hXD8Ll6z7xRCjnMMZ_Gh0gveN5MwymUt6_zr59L7CiN-V7H5RabV9J9bY3OoEAJXaShRhudP0qGu-6ff3-ppSE-qg1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">637535692820000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WebResource.axd</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/WebResource.axd?d=yAZznlIeaGQJz8qTi4uqDXnWBU-09gdKfuUJ4_MyrPsnaIWVKdEZYRUGUG8fWYHF3Kt__zI5SAWBU2NlO0hXD8Ll6z7xRCjnMMZ_Gh0gveN5MwymUt6_zr59L7CiN-V7H5RabV9J9bY3OoEAJXaShRhudP0qGu-6ff3-ppSE-qg1&amp;t=637535692820000000</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">202.4</stringProp>
              <stringProp name="ConstantTimer.delay">404.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://az416426.vo.msecnd.net/scripts/a/ai.0.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">az416426.vo.msecnd.net</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">scripts/a/ai.0.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">az416426.vo.msecnd.net</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/scripts/a/ai.0.js</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">91.60000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">183.20000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://script.hotjar.com/modules.0fd8b750824023792fba.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">script.hotjar.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">modules.0fd8b750824023792fba.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">script.hotjar.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/modules.0fd8b750824023792fba.js</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">307.20000000000005</stringProp>
              <stringProp name="ConstantTimer.delay">614.4000000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Sitefinity/Public/Services/Statistics/Log.svc/?pageNodeId=0c90b85d-6b82-438b-adbc-94c927273e93&amp;trackingId=0a45e81b-0555-4b6c-b218-dad7fb7836d0&amp;referrer=https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3DvHT8_wLVchTtmMOP8lvvHK5O7NfqQNfta7wCz1XrwGS8Z1dZvlcHu55WqUvZWUZIxCe9sSbEDdnfiBf3N0zNvaavXA95V9bVpKkHRlJ4egOIrq6iscMRxtYuvm-Gk1EL0Qm1CZTofxlZQtrWGf30R4tinBK2eKd-KbC_eGZNWQdWHbLwLooKYjpmvbU8uZkI2jnXigVHrnjbg9H2mN7XPrc0iVALy9cbDgGFFMzR7lmBC0behiKrFprq1r2Pj5D_W0Kd1A5yAYacZ96jjjpKRbdiohpCALioEF5Bm5tC43S3G04SZLzR9hryCcbccXjm&amp;nonce=637565314437153036.YzZiZWEzZTktZmQ2NS00M2Q0LThhMTMtMTMzOWU3MmNiZThkNjAyMjIxMjYtMjgzZS00MGIzLTkyZDctZjIzZjNjN2RmZDIy&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D&amp;pageUrl=https://napqa.cpsa.com/learner-home" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="referrer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">referrer</stringProp>
                  <stringProp name="Argument.value">https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid%20profile%20rememberMe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="acr_values" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">acr_values</stringProp>
                  <stringProp name="Argument.value">{&quot;isExt&quot;:&quot;True&quot;,&quot;err&quot;:&quot;/&quot;,&quot;extPvdr&quot;:&quot;AzureB2C&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">id_token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageUrl</stringProp>
                  <stringProp name="Argument.value">https://napqa.cpsa.com/learner-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://napqa.cpsa.com/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">${AuthenticationProperties}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">${nonce}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageNodeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNodeId</stringProp>
                  <stringProp name="Argument.value">0c90b85d-6b82-438b-adbc-94c927273e93</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="trackingId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">trackingId</stringProp>
                  <stringProp name="Argument.value">0a45e81b-0555-4b6c-b218-dad7fb7836d0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">form_post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Sitefinity/Public/Services/Statistics/Log.svc/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Sitefinity/Public/Services/Statistics/Log.svc/?pageNodeId=0c90b85d-6b82-438b-adbc-94c927273e93&amp;trackingId=0a45e81b-0555-4b6c-b218-dad7fb7836d0&amp;referrer=https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3DvHT8_wLVchTtmMOP8lvvHK5O7NfqQNfta7wCz1XrwGS8Z1dZvlcHu55WqUvZWUZIxCe9sSbEDdnfiBf3N0zNvaavXA95V9bVpKkHRlJ4egOIrq6iscMRxtYuvm-Gk1EL0Qm1CZTofxlZQtrWGf30R4tinBK2eKd-KbC_eGZNWQdWHbLwLooKYjpmvbU8uZkI2jnXigVHrnjbg9H2mN7XPrc0iVALy9cbDgGFFMzR7lmBC0behiKrFprq1r2Pj5D_W0Kd1A5yAYacZ96jjjpKRbdiohpCALioEF5Bm5tC43S3G04SZLzR9hryCcbccXjm&amp;nonce=637565314437153036.YzZiZWEzZTktZmQ2NS00M2Q0LThhMTMtMTMzOWU3MmNiZThkNjAyMjIxMjYtMjgzZS00MGIzLTkyZDctZjIzZjNjN2RmZDIy&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D&amp;pageUrl=https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|25Dc4.ndS5s</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q; _hjTLDTest=1; _hjid=87bed54c-15d9-44eb-bf27-0fdf659b7eb6; _hjFirstSeen=1; ai_user=rmIHn|2021-05-13T19:38:04.182Z; sf-trckngckie=0a45e81b-0555-4b6c-b218-dad7fb7836d0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">82.4</stringProp>
              <stringProp name="ConstantTimer.delay">164.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/user-notification/GetNotificationForUser" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">user-notification/GetNotificationForUser</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/user-notification/GetNotificationForUser</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|25Dc4.P6lMW</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q; _hjTLDTest=1; _hjid=87bed54c-15d9-44eb-bf27-0fdf659b7eb6; _hjFirstSeen=1; ai_user=rmIHn|2021-05-13T19:38:04.182Z; sf-trckngckie=0a45e81b-0555-4b6c-b218-dad7fb7836d0; ai_session=TjQc9|1620934685027.885|1620934685027.885</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">1353.2</stringProp>
              <stringProp name="ConstantTimer.delay">2706.4</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://vars.hotjar.com/box-5e3cec51ed8e99df6977c199d27812d7.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">vars.hotjar.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">box-5e3cec51ed8e99df6977c199d27812d7.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">vars.hotjar.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/box-5e3cec51ed8e99df6977c199d27812d7.html</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="upgrade-insecure-requests" elementType="Header">
                  <stringProp name="Header.name">upgrade-insecure-requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">58.0</stringProp>
              <stringProp name="ConstantTimer.delay">116.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://in.hotjar.com/api/v2/client/sites/1196415/visit-data?sv=6" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">in.hotjar.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/client/sites/1196415/visit-data</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">in.hotjar.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/api/v2/client/sites/1196415/visit-data?sv=6</stringProp>
                </elementProp>
                <elementProp name="content-length" elementType="Header">
                  <stringProp name="Header.name">content-length</stringProp>
                  <stringProp name="Header.value">112</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">289.2</stringProp>
              <stringProp name="ConstantTimer.delay">578.4</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://vc.hotjar.io/sessions/1196415?s=0.25&amp;r=0.07875968337833616" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r</stringProp>
                  <stringProp name="Argument.value">0.07875968337833616</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">0.25</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">vc.hotjar.io</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sessions/1196415</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">vc.hotjar.io</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/sessions/1196415?s=0.25&amp;r=0.07875968337833616</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">254.8</stringProp>
              <stringProp name="ConstantTimer.delay">509.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Script/signalRHub.js" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Script/signalRHub.js</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Script/signalRHub.js</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|25Dc4.XysqQ</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="request-context" elementType="Header">
                  <stringProp name="Header.name">request-context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:3573e6a9-614d-47fb-9d86-e6e91309c5fa</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q; _hjTLDTest=1; _hjid=87bed54c-15d9-44eb-bf27-0fdf659b7eb6; _hjFirstSeen=1; ai_user=rmIHn|2021-05-13T19:38:04.182Z; sf-trckngckie=0a45e81b-0555-4b6c-b218-dad7fb7836d0; ai_session=TjQc9|1620934685027.885|1620934685027.885; _hjIncludedInPageviewSample=1; _hjAbsoluteSessionInProgress=1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">909.6</stringProp>
              <stringProp name="ConstantTimer.delay">1819.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com:3391/signalr/negotiate?clientProtocol=1.5&amp;connectionData=%5B%7B%22name%22%3A%22signalrhub%22%7D%5D&amp;_=1620934683535" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;signalrhub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1620934683535</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port">3391</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com:3391</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/signalr/negotiate?clientProtocol=1.5&amp;connectionData=%5B%7B%22name%22%3A%22signalrhub%22%7D%5D&amp;_=1620934683535</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q; _hjTLDTest=1; _hjid=87bed54c-15d9-44eb-bf27-0fdf659b7eb6; _hjFirstSeen=1; ai_user=rmIHn|2021-05-13T19:38:04.182Z; sf-trckngckie=0a45e81b-0555-4b6c-b218-dad7fb7836d0; ai_session=TjQc9|1620934685027.885|1620934685027.885; _hjIncludedInPageviewSample=1; _hjAbsoluteSessionInProgress=1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">614.0</stringProp>
              <stringProp name="ConstantTimer.delay">1228.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor_ConnectionToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">conct_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">ConnectionToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">ConnectionToken_Not_Found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/WebResource.axd?d=yAZznlIeaGQJz8qTi4uqDXnWBU-09gdKfuUJ4_MyrPsnaIWVKdEZYRUGUG8fWYHF3Kt__zI5SAWBU2NlO0hXD8Ll6z7xRCjnMMZ_Gh0gveN5MwymUt6_zr59L7CiN-V7H5RabV9J9bY3OoEAJXaShRhudP0qGu-6ff3-ppSE-qg1&amp;t=637535692820000000" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">yAZznlIeaGQJz8qTi4uqDXnWBU-09gdKfuUJ4_MyrPsnaIWVKdEZYRUGUG8fWYHF3Kt__zI5SAWBU2NlO0hXD8Ll6z7xRCjnMMZ_Gh0gveN5MwymUt6_zr59L7CiN-V7H5RabV9J9bY3OoEAJXaShRhudP0qGu-6ff3-ppSE-qg1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">637535692820000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">WebResource.axd</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Request-Id" elementType="Header">
                  <stringProp name="Header.name">Request-Id</stringProp>
                  <stringProp name="Header.value">|25Dc4.9sld+</stringProp>
                </elementProp>
                <elementProp name="Request-Context" elementType="Header">
                  <stringProp name="Header.name">Request-Context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:3573e6a9-614d-47fb-9d86-e6e91309c5fa</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">322.8</stringProp>
              <stringProp name="ConstantTimer.delay">645.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com/Sitefinity/Public/Services/Statistics/Log.svc/?pageNodeId=621df54c-f291-402c-95cc-8265c17d7cb0&amp;trackingId=0a45e81b-0555-4b6c-b218-dad7fb7836d0&amp;referrer=https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3DvHT8_wLVchTtmMOP8lvvHK5O7NfqQNfta7wCz1XrwGS8Z1dZvlcHu55WqUvZWUZIxCe9sSbEDdnfiBf3N0zNvaavXA95V9bVpKkHRlJ4egOIrq6iscMRxtYuvm-Gk1EL0Qm1CZTofxlZQtrWGf30R4tinBK2eKd-KbC_eGZNWQdWHbLwLooKYjpmvbU8uZkI2jnXigVHrnjbg9H2mN7XPrc0iVALy9cbDgGFFMzR7lmBC0behiKrFprq1r2Pj5D_W0Kd1A5yAYacZ96jjjpKRbdiohpCALioEF5Bm5tC43S3G04SZLzR9hryCcbccXjm&amp;nonce=637565314437153036.YzZiZWEzZTktZmQ2NS00M2Q0LThhMTMtMTMzOWU3MmNiZThkNjAyMjIxMjYtMjgzZS00MGIzLTkyZDctZjIzZjNjN2RmZDIy&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D&amp;pageUrl=https://napqa.cpsa.com/learner-home" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="referrer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">referrer</stringProp>
                  <stringProp name="Argument.value">https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid%20profile%20rememberMe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="acr_values" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">acr_values</stringProp>
                  <stringProp name="Argument.value">{&quot;isExt&quot;:&quot;True&quot;,&quot;err&quot;:&quot;/&quot;,&quot;extPvdr&quot;:&quot;AzureB2C&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">id_token</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageUrl</stringProp>
                  <stringProp name="Argument.value">https://napqa.cpsa.com/learner-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://napqa.cpsa.com/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">${AuthenticationProperties}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">${nonce}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageNodeId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageNodeId</stringProp>
                  <stringProp name="Argument.value">621df54c-f291-402c-95cc-8265c17d7cb0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="trackingId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">trackingId</stringProp>
                  <stringProp name="Argument.value">0a45e81b-0555-4b6c-b218-dad7fb7836d0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="response_mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">response_mode</stringProp>
                  <stringProp name="Argument.value">form_post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Sitefinity/Public/Services/Statistics/Log.svc/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/Sitefinity/Public/Services/Statistics/Log.svc/?pageNodeId=621df54c-f291-402c-95cc-8265c17d7cb0&amp;trackingId=0a45e81b-0555-4b6c-b218-dad7fb7836d0&amp;referrer=https://napqa.cpsa.com/Sitefinity/Authenticate/OpenID/connect/authorize?client_id=sitefinity&amp;redirect_uri=https%3A%2F%2Fnapqa.cpsa.com%2F&amp;response_mode=form_post&amp;response_type=id_token&amp;scope=openid%20profile%20rememberMe&amp;state=OpenIdConnect.AuthenticationProperties%3DvHT8_wLVchTtmMOP8lvvHK5O7NfqQNfta7wCz1XrwGS8Z1dZvlcHu55WqUvZWUZIxCe9sSbEDdnfiBf3N0zNvaavXA95V9bVpKkHRlJ4egOIrq6iscMRxtYuvm-Gk1EL0Qm1CZTofxlZQtrWGf30R4tinBK2eKd-KbC_eGZNWQdWHbLwLooKYjpmvbU8uZkI2jnXigVHrnjbg9H2mN7XPrc0iVALy9cbDgGFFMzR7lmBC0behiKrFprq1r2Pj5D_W0Kd1A5yAYacZ96jjjpKRbdiohpCALioEF5Bm5tC43S3G04SZLzR9hryCcbccXjm&amp;nonce=637565314437153036.YzZiZWEzZTktZmQ2NS00M2Q0LThhMTMtMTMzOWU3MmNiZThkNjAyMjIxMjYtMjgzZS00MGIzLTkyZDctZjIzZjNjN2RmZDIy&amp;acr_values=%7B%22isExt%22%3A%22True%22%2C%22err%22%3A%22%2F%22%2C%22extPvdr%22%3A%22AzureB2C%22%7D&amp;pageUrl=https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="request-id" elementType="Header">
                  <stringProp name="Header.name">request-id</stringProp>
                  <stringProp name="Header.value">|25Dc4.Hrg2t</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="request-context" elementType="Header">
                  <stringProp name="Header.name">request-context</stringProp>
                  <stringProp name="Header.value">appId=cid-v1:3573e6a9-614d-47fb-9d86-e6e91309c5fa</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q; _hjTLDTest=1; _hjid=87bed54c-15d9-44eb-bf27-0fdf659b7eb6; _hjFirstSeen=1; ai_user=rmIHn|2021-05-13T19:38:04.182Z; sf-trckngckie=0a45e81b-0555-4b6c-b218-dad7fb7836d0; ai_session=TjQc9|1620934685027.885|1620934685027.885; _hjIncludedInPageviewSample=1; _hjAbsoluteSessionInProgress=1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">108.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">217.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com:3391/signalr/connect?transport=serverSentEvents&amp;clientProtocol=1.5&amp;connectionToken=vdqQLhBZ8Hx9oZo%2ByoWtebWuG72an55EZgdb6AmH6P99ZbYucYz7FWgNgoE1meyIf4HL4Uynk3gnH68tR4wAqQ%2BcRHL4kKHp7bnVebCrLj9N1sxcyIufYHRKdyYk5DJq&amp;connectionData=%5B%7B%22name%22%3A%22signalrhub%22%7D%5D&amp;tid=0" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="connectionToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionToken</stringProp>
                  <stringProp name="Argument.value">${conct_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="transport" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">transport</stringProp>
                  <stringProp name="Argument.value">serverSentEvents</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;signalrhub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port">3391</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">signalr/connect</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">15000</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com:3391</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/signalr/connect?transport=serverSentEvents&amp;clientProtocol=1.5&amp;connectionToken=vdqQLhBZ8Hx9oZo%2ByoWtebWuG72an55EZgdb6AmH6P99ZbYucYz7FWgNgoE1meyIf4HL4Uynk3gnH68tR4wAqQ%2BcRHL4kKHp7bnVebCrLj9N1sxcyIufYHRKdyYk5DJq&amp;connectionData=%5B%7B%22name%22%3A%22signalrhub%22%7D%5D&amp;tid=0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q; _hjTLDTest=1; _hjid=87bed54c-15d9-44eb-bf27-0fdf659b7eb6; _hjFirstSeen=1; ai_user=rmIHn|2021-05-13T19:38:04.182Z; sf-trckngckie=0a45e81b-0555-4b6c-b218-dad7fb7836d0; ai_session=TjQc9|1620934685027.885|1620934685027.885; _hjIncludedInPageviewSample=1; _hjAbsoluteSessionInProgress=1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">514498.4</stringProp>
              <stringProp name="ConstantTimer.delay">1028996.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://napqa.cpsa.com:3391/signalr/start?transport=serverSentEvents&amp;clientProtocol=1.5&amp;connectionToken=vdqQLhBZ8Hx9oZo%2ByoWtebWuG72an55EZgdb6AmH6P99ZbYucYz7FWgNgoE1meyIf4HL4Uynk3gnH68tR4wAqQ%2BcRHL4kKHp7bnVebCrLj9N1sxcyIufYHRKdyYk5DJq&amp;connectionData=%5B%7B%22name%22%3A%22signalrhub%22%7D%5D&amp;_=1620934683536" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="connectionToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionToken</stringProp>
                  <stringProp name="Argument.value">${conct_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="transport" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">transport</stringProp>
                  <stringProp name="Argument.value">serverSentEvents</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;signalrhub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1620934683536</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">napqa.cpsa.com</stringProp>
            <stringProp name="HTTPSampler.port">3391</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">signalr/start</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name=":method" elementType="Header">
                  <stringProp name="Header.name">:method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name=":authority" elementType="Header">
                  <stringProp name="Header.name">:authority</stringProp>
                  <stringProp name="Header.value">napqa.cpsa.com:3391</stringProp>
                </elementProp>
                <elementProp name=":scheme" elementType="Header">
                  <stringProp name="Header.name">:scheme</stringProp>
                  <stringProp name="Header.value">https</stringProp>
                </elementProp>
                <elementProp name=":path" elementType="Header">
                  <stringProp name="Header.name">:path</stringProp>
                  <stringProp name="Header.value">/signalr/start?transport=serverSentEvents&amp;clientProtocol=1.5&amp;connectionToken=vdqQLhBZ8Hx9oZo%2ByoWtebWuG72an55EZgdb6AmH6P99ZbYucYz7FWgNgoE1meyIf4HL4Uynk3gnH68tR4wAqQ%2BcRHL4kKHp7bnVebCrLj9N1sxcyIufYHRKdyYk5DJq&amp;connectionData=%5B%7B%22name%22%3A%22signalrhub%22%7D%5D&amp;_=1620934683536</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;90&quot;, &quot;Google Chrome&quot;;v=&quot;90&quot;</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://napqa.cpsa.com/learner-home</stringProp>
                </elementProp>
                <elementProp name="accept-encoding" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-GB,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="cookie" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">SF-TokenId=48c16b31-5255-478d-9f33-0666207046ab; .AspNet.Cookies=J1wRa1l8mHx3cuP9zvl6o-Qc4YgP7iGK8OcF76erNIgxJUQk7dO_3gwzJd4VHETrNnGO1RzLaOuBLBChVZGGN3cqhJjWq5P2NExMXSMA447CXfzcdChAV460DOIqWK57x02X-gTTpIxuZrXF4UoQWkE-ft5Pq--SmhVawbrec2N7cZyqkFJr51gPuEsrAjHTxn-1Z9FcXW1WOAZfj-51vmZ4t46OLGPsdXsjyCzRiDGuYCCJmZ-2F_w9JSP-TBoQmfUYaE6cpnC_GowTYOrwExOrvgTbZAOklVSJN2tocVS9SKta0Gxnb98nYFvTLq7DYGl4VxY4_4uF_f4sdHRLtzbJ6h-wwKfy05oc8tXTgln59qO-3cS8HnRg-Jz-nnKcJIRxSRT9fcIgPI90bWwNvhgBqQ_Iv3Lavh46oil-vUg3b5iIE37EnV5Ew7J1UCk_aoia7b_DlJXiLLFWcxbQItue79Ji7Uz0p41zkhaDU5bq9zlfR8FOF0RNEUZplrv46SSgEhn4jB10LF5EJj52oZyVrDRTkfJDE0YXAJ0JTHOAzNqm7rVBgIIwd67JAm3ttfHU8j_OR5ugMXI4gGCnDuFoavI8Gfw7_NTU41VCfEryJsb6puAqvGGtBcFZp3NYRbC5V23CfQzHNmLlX9zDBMY1IR3lA87tvtkgwzPNYGSPLUv1euAVyz50HzrLxZhPj8VFATtTB4qVTxyvegK58yjfKZwwdVmmOnLGuOLBZwozCembfpUM45ao5MrIEv0QVaQU6_U6fkQIlLwqS61FMB7QfbNOlzzZMTnP0Sxcz0dNqqjDsNtvhisLXk7scmYWjdX4MXylBJfuuGiC5FrH20EJ-Td6GiL5-kzwXeU66P3XDIa0h2WDloEo771ntV-bI6-2RSMXNM9-7ZVVXavtXd5YWeRNf2wsaGFeZvyq2eG5UqjkJPSAvrpWvkK3LiwFcZQEmnIOhaF-qpcs8nHrcwspK7TTG52tiwQ6XZ6rtqkhqa1kbjULnat-h5mHBlYCg2dMz7cQ3j_lQmlqJmfiydBoyvyVd9Ekn0pC61p23-Yg9Tyg8hkMrVxW8W9b_7Tk5TIsFJhZMFMELdA4qcHzOcYBZqLx_1UC6h3bRSd9dLHtOVUKCSVqULfXzyP4Fmh2rNDg63XXrrtqZHcHe2u69Rbd9DfZKCcDz9pj3XhTszGhHTu3dFm4QUIkS5897i29RUztiAJbQTI_x1EsdajQyiKAP4nlvM_-POV4gRVFoj5pwzgftj3_5shYnWKbn6AAQQlssmmengOgqdu9Jf3aoFCFRuQZaWQIEHrvkXOcq6aCN69lfIwdS0DBDT_CgCnjuUDE94gLAMdMElZMI-A_NcjfMRGZfdRBgbaKDIv7C91dY1dbianhWREbt-gULfHriT8LE5RBan2vxI_sNYYGqKVMwLqcaIlf9wNSdOEyHYH0TDlH8H_RnHvuz52dYS8wC77CohU6y_yCRsKUErJ70jTkFVtaDHvPRTIaBVl6H-sFKXzyRQ9NHciv7D62aJ5piSLqkWEFy1sc83ONwgGJCjnv4WwDeqmLSlNrCPcSPfsq-KM9P_-E91s0dpAypM96S9NkP-JOnHdDTQNIbu0mMPOB0KDCyA8Z0-rLBH0ZEwEpB6L_yFuMy0dpNSWdyzDu6wR6UF2nNGHPUIQYyRWBLCVieUz11I0vsrmJqGNFNxjJxm1TEsbmEFnEWynm-RnzD2qWugOpkxXSsL-cZ1tHz9X1VHCttebRZLeeKed3pX4QMiwEHxzeBseaYhpiSvDYuH7Yx3h8lstWqgUqybWmgh1Jpv7IS7K8JLnVsUgVXAJr9uxw_PCJQHllKNhYZd-K-InwaKNti5X5chhbfeMUzhYL1nXpOQCcP9b06uW1SIubTD45txacaogSh0JqAhwLVvu8WuoftwKtlyT_QbrU-qifw2iEMqM1uB3cQkmsgQep-bJnX__TncfEasKFLve3Qg6nVUKa-JncIyzLSYu8lxz6XKt9RAtkPA03AhV8-S_CNEemq11GBmzYe3cILEklMcZM6VExWPo_41oDjzxO0CU80JJiSGw1sr_U-5uEwC_S3d7m-vGjfTQMcLcrxnkZZ28Z7VXhBotAxjVj2udKcAmeg8nxU-xItoATxRpTc4hi5GIbmcYRSwVO0uVi4wq1gJcu6HDIaDf7s42KTCDY0wfHxJTyGbeS9DxiApkjRJE; ASP.NET_SessionId=qm2d5ubfvqmb2orhhmh2zk5q; _hjTLDTest=1; _hjid=87bed54c-15d9-44eb-bf27-0fdf659b7eb6; _hjFirstSeen=1; ai_user=rmIHn|2021-05-13T19:38:04.182Z; sf-trckngckie=0a45e81b-0555-4b6c-b218-dad7fb7836d0; ai_session=TjQc9|1620934685027.885|1620934685027.885; _hjIncludedInPageviewSample=1; _hjAbsoluteSessionInProgress=1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="false">
              <stringProp name="RandomTimer.range">514106.80000000005</stringProp>
              <stringProp name="ConstantTimer.delay">1028213.6000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
